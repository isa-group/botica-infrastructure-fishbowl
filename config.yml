broker:
  type: rabbitmq
  username: "username"
  password: "password"
  port: 5672

bots:
  fish-java:
    image: "botica-bot-fishbowl-fish-java"
    publish:
      key: "java_fish_movement"
      order: "move_fish"
    lifecycle:
      type: proactive
      initialDelay: 1
      period: 1
    instances:
      fish_1:
        environment:
          - FISH_SILHOUETTE=1
          - FISH_POSITION_X=0
          - FISH_POSITION_Y=0
      fish_2:
        lifecycle: # overriding the lifecycle configuration
          type: proactive
          initialDelay: 1
          period: 2
        environment:
          - FISH_SILHOUETTE=2
          - FISH_POSITION_X=5
          - FISH_POSITION_Y=5

  fish-node:
    image: "botica-bot-fishbowl-fish-node"
    publish:
      key: "node_fish_movement"
      order: "move_fish"
    lifecycle:
      type: proactive
      initialDelay: 1
      period: 5
    instances:
      fish_3:
        environment:
          - FISH_SILHOUETTE=3
          - FISH_POSITION_X=7
          - FISH_POSITION_Y=0

  manager:
    image: "botica-bot-fishbowl-manager"
    mount:
      - source: "./fishbowl"
        target: "/app/fishbowl"
        createHostPath: true
    subscribe:
      - key: "java_fish_movement"
        strategy: broadcast
      - key: "node_fish_movement"
        strategy: broadcast
    lifecycle:
      type: reactive
      order: "move_fish"
    instances:
      manager_1: { }
